@page "/catalogs/{type}/{url}/{NovelId}/{NovelName}/{NovelAddr}/{rand?}"
@using MauiApp3.Common;
@using MauiApp3.Data;
@using System.Text.Encodings.Web;
@using System.Text;
@using MauiApp3.Data.Impl;
@using MauiApp3.Data.Interfaces;
@using MauiApp3.Components;
@inject Func<Type,INovelDataService> dataServiceFunc;
@inject NavigationManager Navigation

@inject IJSRuntime js;
@if (novelContent == null)
{
    <NovelNaviageBar IndexUrl="@(RazorHelper.GetIndexUrl(type))" CatalogUrl="@(RazorHelper.BuilderUrl("/catalogs",type,url,NovelId,NovelName,NovelAddr,Guid.NewGuid().ToString()))" RecordUrl="/records" UrlCollections="@refershUrl"></NovelNaviageBar>

    <p>@Message</p>
}
else
{
    <NovelNaviageBar IndexUrl="@(RazorHelper.GetIndexUrl(type))"   NextUrl="@(RazorHelper.BuilderUrl("/catalogs",type,novelContent.Next,NovelId,NovelName,NovelAddr))" RecordUrl="/records" ></NovelNaviageBar>
   
    <div class="row mt-1 mb-1" >
        <div class="col-4"></div>
        <div class="col-2">
            <button class="btn btn-outline-dark" @onclick="@(e=>SetFontSize(false))">-</button>
        </div>
        <div class="col-2">
            <button class="btn btn-outline-dark" @onclick="@(e=>SetFontSize())">+</button>
        </div>
    <div class="col-4"></div>
    </div>
    <div class="text-center"><h3 class="align-items-center">@novelContent.ChapterName</h3></div>
    <div style="background:#e6e6e6;font-size:@(fontSize)px">@(new MarkupString(novelContent.Content))</div>
    <NovelNaviageBar IndexUrl="@(RazorHelper.GetIndexUrl(type))" NextUrl="@(RazorHelper.BuilderUrl("/catalogs",type,novelContent.Next,NovelId,NovelName,NovelAddr))" CatalogUrl="@(RazorHelper.BuilderUrl("/detial",type,NovelAddr,NovelId,NovelName,NovelAddr))"></NovelNaviageBar>

}
@code {
    [Parameter] public string type { get; set; }
    [Parameter]
    public string url {get;set;}
    [Parameter]
    public string NovelId { get; set; }
    [Parameter]
    public string NovelName { get; set; }
    [Parameter]
    public string NovelAddr { get; set; }
    [Parameter]
    public string rand { get; set; }
    public static int fontSize = 20;
    public bool showRefresh = false;
    public MauiApp3.Model.NovelContent novelContent;
    public string Message = "Data Loading ............";
    public static int errCount = 0;
    private List<KeyValuePair<string, string>> refershUrl = new();
    protected override async Task OnParametersSetAsync()
    {
        refershUrl.Add(
     new KeyValuePair<string, string>("刷新", RazorHelper.BuilderUrl("/catalogs", type, url, NovelId, NovelName, NovelAddr, Guid.NewGuid().ToString()))
    );
        try
        {
            await js.InvokeVoidAsync("loading", true);
            novelContent = null;
            INovelDataService service;
            if (type == "sodu")
            {
                service = dataServiceFunc(typeof(SoduService));
            }
            else
            {
                service = dataServiceFunc(typeof(BQGService));
                
            }
            novelContent = await service.GetChapter(url, NovelId, NovelName, NovelAddr);

        }
        catch (Exception ex)
        {

            showRefresh = true;
            Message = "发生错误" + ex.Message;
            StateHasChanged();
        }
        finally
        {
            await js.InvokeVoidAsync("loading", false);
        }

    }
    public void SetFontSize(bool add=true)
    {
        if (add)
        {
            fontSize+=1;
        }
        else
        {
            fontSize-=1;   
        }
        StateHasChanged();
    }

}
