@page "/records"
@inject SoduService soduService;
@inject NavigationManager Navigation;
@using System.Text.Encodings.Web;
@using System.Text;
@using MauiApp3.Common;
@using MauiApp3.Data
@using System.Data;
@using MauiApp3.Model;
@using MauiApp3.Data.Impl;
<div class="container">
    <NavLink href="/index/1" class="btn btn-lg btn-block btn-outline-primary mt-2">主页</NavLink>
    <button @onclick="DelAll" class="btn btn-lg btn-block btn-outline-primary mt-2">删除所有记录</button>
    <button @onclick="DelIds" class="btn btn-lg btn-block btn-outline-primary mt-2">删除</button>
</div>

@if (dt != null && dt.Count > 0)
{
   
  <table class="table">
  <thead>
    <tr>
      <th scope="col">操作</th>
      <th scope="col">小说名称</th>
      <th scope="col">章节</th>
    </tr>
  </thead>
  <tbody>
      @for (int i = 0; i < dt.Count; i++)
            {
                var index=i;
                <tr>
                    <td><input type="checkbox" @onchange="@(e=>SelectDel(e,index))" /></td>
                    <th scope="row"><p @onclick=@(e=>ParseParamters(e,0,index)) @onclick:preventDefault>@dt[i].novelname</p></th>
                    <td><p @onclick=@(e=>ParseParamters(e,1,index)) @onclick:preventDefault>@dt[i].chaptername</p></td>
                   
                </tr>
            }
    
    
  </tbody>
    </table>

}
else
{
  <p>@Message</p>    
}
@code {
    private List<Records> dt;
    private List<int> SelectIndexs=new List<int>();
    private string Message = "无任何阅读记录";
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            dt = await DBHelper.GetAllRecords();
        }
        catch (Exception ex)
        {
            dt.Clear();
            Message = "发生错误"+ex.Message;
        }

    }
    public void SelectDel(ChangeEventArgs e,int index)
    {
        if (e.Value is bool)
        {
            var v = (bool)e.Value;
            if (v)
            {
                SelectIndexs.Add(index);
            }
            else
            {
                SelectIndexs.Remove(index);   
            }
        }
        else
        {
            Application.Current.MainPage.DisplayAlert("提示", "错误!", "确认");
        }
    }
    public async Task DelAll()
    {
        if (dt == null || dt.Count < 1)
        {
            return;   
        }
        if (await DBHelper.DelAllRecord())
        {
            await Application.Current.MainPage.DisplayAlert("提示","删除完成！","确定");
            Navigation.NavigateTo("/records",true);
        }
    }
    public async Task DelIds()
    {
       
        if (SelectIndexs.Count > 0)
        {
            var ids = new List<int>();
            for (int i = 0; i < SelectIndexs.Count; i++)
            {
                ids.Add(dt[SelectIndexs[i]].id);
            }
            if (await DBHelper.DelByIds(ids))
            {
                await Application.Current.MainPage.DisplayAlert("提示", "删除成功!", "确认");
                Navigation.NavigateTo("/records", true);
            }

        }
        else
        {
            await Application.Current.MainPage.DisplayAlert("提示", "未选中任何记录", "确认");
        }

    }
    public void ParseParamters(MouseEventArgs e,int flag, int i)
    {
        if (flag == 0)
        {
            Navigation.GoTo("/detial",dt[i].srcType, dt[i].noveladdr, dt[i].novelid, dt[i].novelname, dt[i].noveladdr);
        }
        else
        {
            Navigation.GoTo("/catalogs",dt[i].srcType ,dt[i].chapteraddr, dt[i].novelid, dt[i].novelname, dt[i].noveladdr);
        }
    }
   
}
