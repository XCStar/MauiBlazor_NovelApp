@page "/news/{id:int?}/{flag:bool?}"
@using MauiApp3.Model;
@using MauiApp3.Data;
@using MauiApp3.Common;
@inject NewsService newService;
@inject NavigationManager navigate;
@inject IJSRuntime js;
<div class="btn-group container mb-3 mt-2">
    <NavLink href="/" class="btn text-nowrap btn-sm btn-block btn-outline-primary">主页</NavLink>
    <NavLink href="/novels" class="btn text-nowrap btn-sm btn-block btn-outline-primary">小说</NavLink>
    <NavLink href="/records" class="btn text-nowrap btn-sm btn-block btn-outline-primary">历史记录</NavLink>
</div>
<div class="tab-content" id="pills-tabContent">
        @if (news != null && news.Count > 0)
        {
            <div class="tab-pane fade show active" >
                <ul class="list-group list-group-flush">

                    @foreach (var item in news)
                    {
                       @* var url = item.link;
                        <li class="list-group-item"><a class="link-primary" style="text-decoration:none" @onclick="@(e=>GotWebView(url))" @onclick:preventDefault href="@item.link">@item.title</a><span class="badge bg-danger">@(item.extra)</span></li>
                         *@
                        <li class="list-group-item"><p class="link-primary" style="text-decoration:none" @onclick="@(e=>navigate.OpenInWebView(item.link))" >@item.title</p><span class="badge bg-danger">@(item.extra)</span></li>
                    }


                </ul>
            </div>
        }
        else
        {
            <p>@Message</p>
        }
</div>
@code {
    public IList<MauiApp3.Data.News> news;
    public string Message="数据正在加载....";
    [Parameter] public int id { get; set; }
    [Parameter] public bool flag { get; set; }
    public async Task GetNews(int id,bool flag=true)
    {
        try
        {
            await js.InvokeVoidAsync("loading", true);
            if (flag)
            {
                news = await newService.GetNewsByID(id);
            }
            else
            {
                news = await newService.GetNewByTopID(id);
            }

        }
        catch (Exception ex)
        {

            Message = "发生错误" + ex.Message;
        }
        finally
        {
            await js.InvokeVoidAsync("loading", false);
        }

        StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (id==0)
        {
            id = 132;
            flag = false;
        }
        await GetNews(id, flag);

    }
    

}
