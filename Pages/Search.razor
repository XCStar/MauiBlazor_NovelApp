@page "/search/{searchText?}"
@using MauiApp3.Common;
@using MauiApp3.Data;
@using MauiApp3.Model;
@using System.Text;
@using System.Text.Encodings.Web;
@inject SoduService soduService;
@inject NavigationManager Navigation;
@inject IJSRuntime js;
<div class="container">
    <NavLink href="/index" class="btn btn-lg btn-block btn-outline-primary">首页</NavLink>

    <NavLink href="/records" class="btn btn-lg btn-block btn-outline-primary">历史记录</NavLink>
</div>
<div class="container">
    <h1><strong>@searchText</strong>搜索结果</h1>
    @if (novelPageInfo != null)
    {
        <div class="p-2 bd-highlight">
            <ul>
                @if (novelPageInfo.Infos != null)
                {
                    @foreach (var item in novelPageInfo.Infos)
                    {
                        <li>
                        <p class="lead" @onclick=@(e=>Navigation.GoTo("/detial",item.Url,item.NovleId,item.Name,item.Url))><strong>@item.Name</strong></p>
                            <p>@item.LastChapter</p>
                            <p>@item.UpdateTime</p>
                        </li>
                    }
                }

            </ul>
        </div>
    }
    else
    {
        <p>@Message</p>
    }
</div>

@code {
    [Parameter]
    public string searchText { get; set; }
    public string Message = "loading......";
    private NovelPageInfo novelPageInfo;
    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(searchText))
        {
            try
            {
                await js.InvokeVoidAsync("loading", true);
                novelPageInfo = null;
                novelPageInfo = await soduService.Search(searchText);
            }
            catch (Exception ex)
            {
                Message = $"发生错误-{ex.Message}";
            }
            finally
            {
                await js.InvokeVoidAsync("loading", false);
            }

        }
        else
        {
            Message = "无搜索关键字";

        }
    }
    
}
