@page "/detial/{type}/{url}/{NovelId}/{NovelName}/{NovelAddr}/{pageNum:int?}"
@using MauiApp3.Common;
@using MauiApp3.Data;
@using System.Text.Encodings.Web;
@using System.Text;
@using MauiApp3.Data.Impl;
@using MauiApp3.Data.Interfaces;
@inject INovelService service;
@inject NavigationManager Navigation;
@inject IJSRuntime js;
@if (novelInfo == null)
{
    <MauiApp3.Components.NovelNaviageBar IndexUrl="@(RazorHelper.GetIndexUrl(type))"
                                   RecordUrl="/records" />
    <p>@Message</p>
}
else
{
    <p>当前页：@pageNum</p>
    <MauiApp3.Components.NovelNaviageBar IndexUrl="@(RazorHelper.GetIndexUrl(type))"
                                   PrevtUrl="@(prevUrl)"
                                   NextUrl="@(nextUrl)"
                                   LastUrl="@(lastUrl)" />
    <div class="row container text-center mt-3">
        <h1>@novelInfo.Name</h1>
        <p>@novelInfo.Author</p>
        <p>@novelInfo.NovelType</p>
        <p>@novelInfo.LastChapter</p>
        <p>@novelInfo.WordCount</p>
    </div>
    <div class="container">
        <p>@novelInfo.Description</p>
    </div>
@*     <a href="{detial}/#bottom" name="top" >去底部</a> *@
    <ul>
     
    @foreach (var item in novelInfo.Chapters)
    {
        <li class="media text-muted pt-3">
            <p class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray align-middle">
                    <a @onclick=@(e=>Navigation.GoTo("/catalogs",type,item.Url,NovelId,NovelName,NovelAddr)) @onclick:preventDefault>
                    <strong class="d-block text-gray-dark">@item.Name</strong>
                </a>
            </p>
        </li>
       
    }
    </ul>
    @* <a href="#top" target="_top" name="bottom">去顶部</a> *@
    <MauiApp3.Components.NovelNaviageBar IndexUrl="@(RazorHelper.GetIndexUrl(type))"
    PrevtUrl="@(prevUrl)"
    NextUrl="@(nextUrl)"
    LastUrl="@(lastUrl)">
    </MauiApp3.Components.NovelNaviageBar>
    @if (novelInfo.TotalPage > 1)
    {
        <div class="input-group container">
            <label class="input-group-text border-primary text-primary">页码</label>
            <select class="form-select form-select-sm border-primary" @onchange="SelectedChanged">
                @for (int i = 0; i < novelInfo.TotalPage; i++)
                {
                    <option value="@(i+1)">@(i + 1)</option>
                }
            </select>
            <label class="input-group-text border-primary text-primary">跳转</label>
        </div>
    }
}


@code {
    [Parameter] public string type { get; set; }
    [Parameter]
    public string url { get; set; }
    [Parameter]
    public int? pageNum { get; set; }
    [Parameter]
    public string NovelId { get; set; }
    [Parameter]
    public string NovelName { get; set; }
    [Parameter]
    public string NovelAddr { get; set; }
    private string nextUrl => (novelInfo.TotalPage - novelInfo.CurrentPage) switch
    {
        > 0 => RazorHelper.BuilderUrl("/detial", type, url, NovelId, NovelName, NovelAddr, (novelInfo.CurrentPage +1).ToString()),
        _ => string.Empty
    };
    private string lastUrl => (novelInfo.TotalPage - novelInfo.CurrentPage) switch
    {
        >0 => RazorHelper.BuilderUrl("/detial", type, url, NovelId, NovelName, NovelAddr,novelInfo.TotalPage.ToString()),
        _  => string.Empty
    };
    private string prevUrl=>novelInfo.CurrentPage switch
    {
        > 1 => RazorHelper.BuilderUrl("/detial", type, url, NovelId, NovelName, NovelAddr, (novelInfo.CurrentPage - 1).ToString()),
        _=>string.Empty
    };
    public MauiApp3.Model.NovelInfo novelInfo;
    public string Message = "loading .......";
    public void SelectedChanged(ChangeEventArgs e)
    {

        if (e.Value is not null)
        {
            if(int.TryParse(e.Value.ToString(),out int v))
            {
                if (v != novelInfo.CurrentPage)
                {
                    Navigation.GoTo("/detial",type, url, NovelId, NovelName, NovelAddr, v.ToString());
                }

            }

        }
    }
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            await js.InvokeVoidAsync("loading", true);
         
            if (pageNum is null)
            {
                pageNum = 1;   
            }
            novelInfo = await service.GetNovelChapterList(type,url,pageNum.Value);

        }
        catch (Exception ex)
        {
            Message = ex.Message;
            StateHasChanged();
        }
        finally
        {
            await js.InvokeVoidAsync("loading", false);
        }

    }

    public void GoToNext(MouseEventArgs e, int page)
    {
        try
        {
            Navigation.NavigateTo($"/detial/{type}/{UrlEncoder.Default.Encode(url)}/{NovelId}/{UrlEncoder.Default.Encode(NovelName)}/{UrlEncoder.Default.Encode(NovelAddr)}/{page}");
        }
        catch (Exception ex)
        {
            Message = ex.Message;
            throw;
        }


    }
    
}
